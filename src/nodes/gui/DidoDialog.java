/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DidoDialog.java
 *
 * Created on 7-gen-2010, 12.24.35
 */

package nodes.gui;

import raspyprog.RaspyProgApp;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import nodes.FieldChecker;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;

/**
 *
 * @author amirrix
 */
public class DidoDialog extends javax.swing.JDialog {

    public ArrayList<SingleDidoPanel> channelsList;

    /** Creates new form DidoDialog */
    public DidoDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        center();

        channelsList = new ArrayList<SingleDidoPanel>();
        for (int i = 0; i < 8; i++) {
            channelsList.add(new SingleDidoPanel());
            panelChannels.add(channelsList.get(i));
        }

        setResizable(false);
    }

    private void center(){
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Rectangle frame = getBounds();
        setLocation((screen.width - frame.width)/2, (screen.height - frame.height)/2);
    }

    public SingleDidoPanel getChannelPanel(int panelIdx){
        return channelsList.get(panelIdx);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new JLabel();
        txtSerNum = new JTextField();
        btnCancel = new JButton();
        btnOK = new JButton();
        panelChannels = new JPanel();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        ResourceMap resourceMap = Application.getInstance(RaspyProgApp.class).getContext().getResourceMap(DidoDialog.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtSerNum.setColumns(12);
        txtSerNum.setText(resourceMap.getString("txtSerNum.text")); // NOI18N
        txtSerNum.setName("txtSerNum"); // NOI18N

        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOK.setIcon(resourceMap.getIcon("btnOK.icon")); // NOI18N
        btnOK.setText(resourceMap.getString("btnOK.text")); // NOI18N
        btnOK.setName("btnOK"); // NOI18N
        btnOK.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        panelChannels.setName("panelChannels"); // NOI18N
        panelChannels.setLayout(new GridLayout(0, 1, 0, 2));

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(panelChannels, GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(ComponentPlacement.UNRELATED)
                        .addComponent(txtSerNum, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnOK)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSerNum, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(panelChannels, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED, 426, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOK))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        returnStatus = RET_CANCEL;
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        //Se il campo e' vuoto consento di uscire altrimenti
        //faccio il controllo.
        if (!txtSerNum.getText().isEmpty()){
            if (!FieldChecker.checkSerialNumber("DS2408", txtSerNum.getText())) {
                JOptionPane.showMessageDialog(null,
                    "Attenzione il numero di serie e' errato!!",
                    "Errore",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        returnStatus = RET_OK;
        setVisible(false);
    }//GEN-LAST:event_btnOKActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                DidoDialog dialog = new DidoDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public JButton btnCancel;
    public JButton btnOK;
    public JLabel jLabel1;
    public JPanel panelChannels;
    public JTextField txtSerNum;
    // End of variables declaration//GEN-END:variables

    public static final int RET_OK = 1;
    public static final int RET_CANCEL = 0;

    private int returnStatus = RET_CANCEL;

    /**
     * @return the returnStatus
     */
    public int getReturnStatus() {
        return returnStatus;
    }
}
